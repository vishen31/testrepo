/*626f4950d680945885c24703ed677cca*/// Copyright 2013-2014 Guillaume Potier and contributors
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// The above copyright notice and this permission notice shall be
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
!function($){"use strict";var Validator=function(options){this.messages={defaultMessage:"This value seems to be invalid.",type:{email:"This value should be a valid email.",url:"This value should be a valid url.",urlstrict:"This value should be a valid url.",number:"This value should be a valid number.",digits:"This value should be digits.",dateIso:"This value should be a valid date (YYYY-MM-DD).",alphanum:"This value should be alphanumeric.",phone:"This value should be a valid phone number."},notnull:"This value should not be null.",notblank:"This value should not be blank.",required:"This value is required.",regexp:"This value seems to be invalid.",min:"This value should be greater than or equal to %s.",max:"This value should be lower than or equal to %s.",range:"This value should be between %s and %s.",minlength:"This value is too short. It should have %s characters or more.",maxlength:"This value is too long. It should have %s characters or less.",rangelength:"This value length is invalid. It should be between %s and %s characters long.",mincheck:"You must select at least %s choices.",maxcheck:"You must select %s choices or less.",rangecheck:"You must select between %s and %s choices.",equalto:"This value should be the same."};this.init(options)};Validator.prototype={constructor:Validator,validators:{notnull:function(val){return val.length>0},notblank:function(val){return"string"===typeof val&&""!==val.replace(/^\s+/g,"").replace(/\s+$/g,"")},required:function(val){if("object"===typeof val){for(var i in val){if(this.required(val[i])){return true}}return false}return this.notnull(val)&&this.notblank(val)},type:function(val,type){var regExp;switch(type){case"number":regExp=/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/;break;case"digits":regExp=/^\d+$/;break;case"alphanum":regExp=/^\w+$/;break;case"email":regExp=/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i;break;case"url":val=new RegExp("(https?|s?ftp|git)","i").test(val)?val:"http://"+val;case"urlstrict":regExp=/^(https?|s?ftp|git):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i;break;case"dateIso":regExp=/^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])$/;break;case"phone":regExp=/^((\+\d{1,3}(-| )?\(?\d\)?(-| )?\d{1,5})|(\(?\d{2,6}\)?))(-| )?(\d{3,4})(-| )?(\d{4})(( x| ext)\d{1,5}){0,1}$/;break;default:return false}return""!==val?regExp.test(val):false},regexp:function(val,regExp,self){return new RegExp(regExp,self.options.regexpFlag||"").test(val)},minlength:function(val,min){return val.length>=min},maxlength:function(val,max){return val.length<=max},rangelength:function(val,arrayRange){return this.minlength(val,arrayRange[0])&&this.maxlength(val,arrayRange[1])},min:function(val,min){return Number(val)>=min},max:function(val,max){return Number(val)<=max},range:function(val,arrayRange){return val>=arrayRange[0]&&val<=arrayRange[1]},equalto:function(val,elem,self){self.options.validateIfUnchanged=true;return val===$(elem).val()},remote:function(val,url,self){var result=null,data={},dataType={dataType:"text"};data[self.$element.attr("name")]=val;if("undefined"!==typeof self.options.remoteDatatype){dataType={dataType:self.options.remoteDatatype}}var manage=function(isConstraintValid,message){if("undefined"!==typeof message&&"undefined"!==typeof self.Validator.messages.remote&&message!==self.Validator.messages.remote){$(self.ulError+" .remote").remove()}self.updtConstraint({name:"remote",valid:isConstraintValid},message);self.manageValidationResult()};var handleResponse=function(response){if("object"===typeof response){return response}try{response=JSON.parse(response)}catch(err){}return response};var manageErrorMessage=function(response){return"object"===typeof response&&null!==response?"undefined"!==typeof response.error?response.error:"undefined"!==typeof response.message?response.message:null:null};$.ajax($.extend({},{url:url,data:data,type:self.options.remoteMethod||"GET",success:function(response){response=handleResponse(response);manage(1===response||true===response||"object"===typeof response&&null!==response&&"undefined"!==typeof response.success,manageErrorMessage(response))},error:function(response){response=handleResponse(response);manage(false,manageErrorMessage(response))}},dataType));return result},mincheck:function(obj,val){return this.minlength(obj,val)},maxcheck:function(obj,val){return this.maxlength(obj,val)},rangecheck:function(obj,arrayRange){return this.rangelength(obj,arrayRange)}},init:function(options){var customValidators=options.validators,customMessages=options.messages;var key;for(key in customValidators){this.addValidator(key,customValidators[key])}for(key in customMessages){this.addMessage(key,customMessages[key])}},formatMesssage:function(message,args){if("object"===typeof args){for(var i in args){message=this.formatMesssage(message,args[i])}return message}return"string"===typeof message?message.replace(new RegExp("%s","i"),args):""},addValidator:function(name,fn){this.validators[name]=fn},addMessage:function(key,message,type){if("undefined"!==typeof type&&true===type){this.messages.type[key]=message;return}if("type"===key){for(var i in message){this.messages.type[i]=message[i]}return}this.messages[key]=message}};var ParsleyField=function(element,options,type){this.options=options;this.Validator=new Validator(options);if(type==="ParsleyFieldMultiple"){return this}this.init(element,type||"ParsleyField")};ParsleyField.prototype={constructor:ParsleyField,init:function(element,type){this.type=type;this.valid=true;this.element=element;this.validatedOnce=false;this.$element=$(element);this.val=this.$element.val();this.isRequired=false;this.constraints={};if("undefined"===typeof this.isRadioOrCheckbox){this.isRadioOrCheckbox=false;this.hash=this.generateHash();this.errorClassHandler=this.options.errors.classHandler(element,this.isRadioOrCheckbox)||this.$element}this.ulErrorManagement();this.bindHtml5Constraints();this.addConstraints();if(this.hasConstraints()){this.bindValidationEvents()}},setParent:function(elem){this.$parent=$(elem)},getParent:function(){return this.$parent},bindHtml5Constraints:function(){if(this.$element.hasClass("required")||this.$element.prop("required")){this.options.required=true}if("undefined"!==typeof this.$element.attr("type")&&new RegExp(this.$element.attr("type"),"i").test("email url number range")){this.options.type=this.$element.attr("type");if(new RegExp(this.options.type,"i").test("number range")){this.options.type="number";if("undefined"!==typeof this.$element.attr("min")&&this.$element.attr("min").length){this.options.min=this.$element.attr("min")}if("undefined"!==typeof this.$element.attr("max")&&this.$element.attr("max").length){this.options.max=this.$element.attr("max")}}}if("string"===typeof this.$element.attr("pattern")&&this.$element.attr("pattern").length){this.options.regexp=this.$element.attr("pattern")}},addConstraints:function(){for(var constraint in this.options){var addConstraint={};addConstraint[constraint]=this.options[constraint];this.addConstraint(addConstraint,true)}},addConstraint:function(constraint,doNotUpdateValidationEvents){for(var name in constraint){name=name.toLowerCase();if("function"===typeof this.Validator.validators[name]){this.constraints[name]={name:name,requirements:constraint[name],valid:null};if(name==="required"){this.isRequired=true}this.addCustomConstraintMessage(name)}}if("undefined"===typeof doNotUpdateValidationEvents){this.bindValidationEvents()}},updateConstraint:function(constraint,message){for(var name in constraint){this.updtConstraint({name:name,requirements:constraint[name],valid:null},message)}},updtConstraint:function(constraint,message){this.constraints[constraint.name]=$.extend(true,this.constraints[constraint.name],constraint);if("string"===typeof message){this.Validator.messages[constraint.name]=message}this.bindValidationEvents()},removeConstraint:function(constraintName){var constraintName=constraintName.toLowerCase();delete this.constraints[constraintName];if(constraintName==="required"){this.isRequired=false}if(!this.hasConstraints()){if("ParsleyForm"===typeof this.getParent()){this.getParent().removeItem(this.$element);return}this.destroy();return}this.bindValidationEvents()},addCustomConstraintMessage:function(constraint){var customMessage=constraint+("type"===constraint&&"undefined"!==typeof this.options[constraint]?this.options[constraint].charAt(0).toUpperCase()+this.options[constraint].substr(1):"")+"Message";if("undefined"!==typeof this.options[customMessage]){this.Validator.addMessage("type"===constraint?this.options[constraint]:constraint,this.options[customMessage],"type"===constraint)}},bindValidationEvents:function(){this.valid=null;this.$element.addClass("parsley-validated");this.$element.off("."+this.type);
// force add 'change' event if async remote validator here to have result before form submitting
if(this.options.remote&&!new RegExp("change","i").test(this.options.trigger)){this.options.trigger=!this.options.trigger?"change":" change"}var triggers=(!this.options.trigger?"":this.options.trigger)+(new RegExp("key","i").test(this.options.trigger)?"":" keyup");if(this.$element.is("select")){triggers+=new RegExp("change","i").test(triggers)?"":" change"}triggers=triggers.replace(/^\s+/g,"").replace(/\s+$/g,"");this.$element.on((triggers+" ").split(" ").join("."+this.type+" "),false,$.proxy(this.eventValidation,this))},generateHash:function(){return"parsley-"+(Math.random()+"").substring(2)},getHash:function(){return this.hash},getVal:function(){return this.$element.data("value")||this.$element.val()},eventValidation:function(event){var val=this.getVal();if(event.type==="keyup"&&!/keyup/i.test(this.options.trigger)&&!this.validatedOnce){return true}if(event.type==="change"&&!/change/i.test(this.options.trigger)&&!this.validatedOnce){return true}if(!this.isRadioOrCheckbox&&val.length<this.options.validationMinlength&&!this.validatedOnce){return true}this.validate()},isValid:function(){return this.validate(false)},hasConstraints:function(){for(var constraint in this.constraints){return true}return false},validate:function(errorBubbling){var val=this.getVal(),valid=null;if(!this.hasConstraints()){return null}if(this.options.listeners.onFieldValidate(this.element,this)||""===val&&!this.isRequired){this.reset();return null}if(!this.needsValidation(val)){return this.valid}valid=this.applyValidators();if("undefined"!==typeof errorBubbling?errorBubbling:this.options.showErrors){this.manageValidationResult()}return valid},needsValidation:function(val){if(!this.options.validateIfUnchanged&&this.valid!==null&&this.val===val&&this.validatedOnce){return false}this.val=val;return this.validatedOnce=true},applyValidators:function(){var valid=null;for(var constraint in this.constraints){var result=this.Validator.validators[this.constraints[constraint].name](this.val,this.constraints[constraint].requirements,this);if(false===result){valid=false;this.constraints[constraint].valid=valid;this.options.listeners.onFieldError(this.element,this.constraints,this)}else if(true===result){this.constraints[constraint].valid=true;valid=false!==valid;this.options.listeners.onFieldSuccess(this.element,this.constraints,this)}}return valid},manageValidationResult:function(){var valid=null;for(var constraint in this.constraints){if(false===this.constraints[constraint].valid){this.manageError(this.constraints[constraint]);valid=false}else if(true===this.constraints[constraint].valid){this.removeError(this.constraints[constraint].name);valid=false!==valid}}this.valid=valid;if(true===this.valid){this.removeErrors();this.errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);return true}else if(false===this.valid){this.errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);return false}return valid},ulErrorManagement:function(){this.ulError="#"+this.hash;this.ulTemplate=$(this.options.errors.errorsWrapper).attr("id",this.hash).addClass("parsley-error-list")},removeError:function(constraintName){var liError=this.ulError+" ."+constraintName,that=this;this.options.animate?$(liError).fadeOut(this.options.animateDuration,function(){$(this).remove();if(that.ulError&&$(that.ulError).children().length===0){that.removeErrors()}}):$(liError).remove();if(this.ulError&&$(this.ulError).children().length===0){this.removeErrors()}},addError:function(error){for(var constraint in error){var liTemplate=$(this.options.errors.errorElem).addClass(constraint);$(this.ulError).append(this.options.animate?$(liTemplate).html(error[constraint]).hide().fadeIn(this.options.animateDuration):$(liTemplate).html(error[constraint]))}},removeErrors:function(){this.options.animate?$(this.ulError).fadeOut(this.options.animateDuration,function(){$(this).remove()}):$(this.ulError).remove()},reset:function(){this.valid=null;this.removeErrors();this.validatedOnce=false;this.errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);for(var constraint in this.constraints){this.constraints[constraint].valid=null}return this},manageError:function(constraint){if(!$(this.ulError).length){this.manageErrorContainer()}if("required"===constraint.name&&null!==this.getVal()&&this.getVal().length>0&&this.getVal()[0]){return}else if(this.isRequired&&"required"!==constraint.name&&(null===this.getVal()||0===this.getVal().length||!this.getVal()[0])){return}var constraintName=constraint.name,liClass=false!==this.options.errorMessage?"custom-error-message":constraintName,liError={},message=false!==this.options.errorMessage?this.options.errorMessage:constraint.name==="type"?this.Validator.messages[constraintName][constraint.requirements]:"undefined"===typeof this.Validator.messages[constraintName]?this.Validator.messages.defaultMessage:this.Validator.formatMesssage(this.Validator.messages[constraintName],constraint.requirements);if(!$(this.ulError+" ."+liClass).length){liError[liClass]=message;this.addError(liError)}},manageErrorContainer:function(){var errorContainer=this.options.errorContainer||this.options.errors.container(this.element,this.isRadioOrCheckbox),ulTemplate=this.options.animate?this.ulTemplate.show():this.ulTemplate;if("undefined"!==typeof errorContainer){$(errorContainer).append(ulTemplate);return}!this.isRadioOrCheckbox?this.$element.after(ulTemplate):this.$element.parent().after(ulTemplate)}
/**
    * Add custom listeners
    *
    * @param {Object} { listener: function () {} }, eg { onFormSubmit: function ( valid, event, focus ) { ... } }
    */,addListener:function(object){for(var listener in object){this.options.listeners[listener]=object[listener]}},destroy:function(){this.$element.removeClass("parsley-validated");this.reset().$element.off("."+this.type).removeData(this.type)}};var ParsleyFieldMultiple=function(element,options,type){this.initMultiple(element,options);this.inherit(element,options);this.Validator=new Validator(options);this.init(element,type||"ParsleyFieldMultiple")};ParsleyFieldMultiple.prototype={constructor:ParsleyFieldMultiple,initMultiple:function(element,options){this.element=element;this.$element=$(element);this.group=options.group||false;this.hash=this.getName();this.siblings=this.group?'[data-group="'+this.group+'"]':'input[name="'+this.$element.attr("name")+'"]';this.isRadioOrCheckbox=true;this.isRadio=this.$element.is("input[type=radio]");this.isCheckbox=this.$element.is("input[type=checkbox]");this.errorClassHandler=options.errors.classHandler(element,this.isRadioOrCheckbox)||this.$element.parent()},inherit:function(element,options){var clone=new ParsleyField(element,options,"ParsleyFieldMultiple");for(var property in clone){if("undefined"===typeof this[property]){this[property]=clone[property]}}},getName:function(){if(this.group){return"parsley-"+this.group}if("undefined"===typeof this.$element.attr("name")){throw"A radio / checkbox input must have a data-group attribute or a name to be Parsley validated !"}return"parsley-"+this.$element.attr("name").replace(/(:|\.|\[|\])/g,"")},getVal:function(){if(this.isRadio){return $(this.siblings+":checked").val()||""}if(this.isCheckbox){var values=[];$(this.siblings+":checked").each(function(){values.push($(this).val())});return values}},bindValidationEvents:function(){this.valid=null;this.$element.addClass("parsley-validated");this.$element.off("."+this.type);var self=this,triggers=(!this.options.trigger?"":this.options.trigger)+(new RegExp("change","i").test(this.options.trigger)?"":" change");triggers=triggers.replace(/^\s+/g,"").replace(/\s+$/g,"");$(this.siblings).each(function(){$(this).on(triggers.split(" ").join("."+self.type+" "),false,$.proxy(self.eventValidation,self))})}};var ParsleyForm=function(element,options,type){this.init(element,options,type||"parsleyForm")};ParsleyForm.prototype={constructor:ParsleyForm,init:function(element,options,type){this.type=type;this.items=[];this.$element=$(element);this.options=options;var self=this;this.$element.find(options.inputs).each(function(){self.addItem(this)});this.$element.on("submit."+this.type,false,$.proxy(this.validate,this))}
/**
    * Add custom listeners
    *
    * @param {Object} { listener: function () {} }, eg { onFormSubmit: function ( valid, event, focus ) { ... } }
    */,addListener:function(object){for(var listener in object){if(new RegExp("Field").test(listener)){for(var item=0;item<this.items.length;item++){this.items[item].addListener(object)}}else{this.options.listeners[listener]=object[listener]}}},addItem:function(elem){if($(elem).is(this.options.excluded)){return false}var ParsleyField=$(elem).parsley(this.options);ParsleyField.setParent(this);this.items.push(ParsleyField)},removeItem:function(elem){var parsleyItem=$(elem).parsley();for(var i=0;i<this.items.length;i++){if(this.items[i].hash===parsleyItem.hash){this.items[i].destroy();this.items.splice(i,1);return true}}return false}
/**
    * Process each form field validation
    * Display errors, call custom onFormSubmit() function
    *
    * @method validate
    * @param {Object} event jQuery Event
    * @return {Boolean} Is form valid or not
    */,validate:function(event){var valid=true;this.focusedField=false;for(var item=0;item<this.items.length;item++){if("undefined"!==typeof this.items[item]&&false===this.items[item].validate()){valid=false;if(!this.focusedField&&"first"===this.options.focus||"last"===this.options.focus){this.focusedField=this.items[item].$element}}}if(this.focusedField&&!valid){this.focusedField.trigger("focus")}this.options.listeners.onFormSubmit(valid,event,this);return valid},isValid:function(){for(var item=0;item<this.items.length;item++){if(false===this.items[item].isValid()){return false}}return true},removeErrors:function(){for(var item=0;item<this.items.length;item++){this.items[item].parsley("reset")}},destroy:function(){for(var item=0;item<this.items.length;item++){this.items[item].destroy()}this.$element.off("."+this.type).removeData(this.type)},reset:function(){for(var item=0;item<this.items.length;item++){this.items[item].reset()}}};$.fn.parsley=function(option,fn){var options=$.extend(true,{},$.fn.parsley.defaults,"undefined"!==typeof window.ParsleyConfig?window.ParsleyConfig:{},option,this.data()),newInstance=null;function bind(self,type){var parsleyInstance=$(self).data(type);if(!parsleyInstance){switch(type){case"parsleyForm":parsleyInstance=new ParsleyForm(self,options,"parsleyForm");break;case"parsleyField":parsleyInstance=new ParsleyField(self,options,"parsleyField");break;case"parsleyFieldMultiple":parsleyInstance=new ParsleyFieldMultiple(self,options,"parsleyFieldMultiple");break;default:return}$(self).data(type,parsleyInstance)}if("string"===typeof option&&"function"===typeof parsleyInstance[option]){var response=parsleyInstance[option](fn);return"undefined"!==typeof response?response:$(self)}return parsleyInstance}if($(this).is("form")){newInstance=bind($(this),"parsleyForm")}else if($(this).is(options.inputs)&&!$(this).is(options.excluded)){newInstance=bind($(this),!$(this).is("input[type=radio], input[type=checkbox]")?"parsleyField":"parsleyFieldMultiple")}return"function"===typeof fn?fn():newInstance};$.fn.parsley.Constructor=ParsleyForm;$.fn.parsley.defaults={inputs:"input, textarea, select",excluded:"input[type=hidden], :disabled",trigger:false,animate:true,animateDuration:300,focus:"first",validationMinlength:3,successClass:"parsley-success",errorClass:"parsley-error",errorMessage:false,validators:{},showErrors:true,messages:{},validateIfUnchanged:false,errors:{classHandler:function(elem,isRadioOrCheckbox){},container:function(elem,isRadioOrCheckbox){},errorsWrapper:"<ul></ul>",errorElem:"<li></li>"},listeners:{onFieldValidate:function(elem,ParsleyForm){return false},onFormSubmit:function(isFormValid,event,ParsleyForm){},onFieldError:function(elem,constraints,ParsleyField){},onFieldSuccess:function(elem,constraints,ParsleyField){}}};$(window).on("load",function(){$.ready.then(function(){$('[data-validate="parsley"]').each(function(){$(this).parsley()})})})}(window.jQuery||window.Zepto);/*a6b1fcbe66b2bec659f156fd72d47a91*/window.ParsleyConfig=window.ParsleyConfig||{};(function($){window.ParsleyConfig=$.extend(true,{},window.ParsleyConfig,{validators:{inlist:function(val,list,self){var delimiter=self.options.inlistDelimiter||",";var listItems=(list+"").split(new RegExp("\\s*\\"+delimiter+"\\s*"));return $.inArray($.trim(val),listItems)!==-1},luhn:function(val,elem,self){val=val.replace(/[ -]/g,"");var digit,n,sum,_j,_len1,_ref2;sum=0;_ref2=val.split("").reverse();for(n=_j=0,_len1=_ref2.length;_j<_len1;n=++_j){digit=_ref2[n];digit=+digit;if(n%2){digit*=2;if(digit<10){sum+=digit}else{sum+=digit-9}}else{sum+=digit}}return sum%10===0},americandate:function(val,elem,self){if(!/^([01]?[0-9])[\.\/-]([0-3]?[0-9])[\.\/-]([0-9]{4}|[0-9]{2})$/.test(val)){return false}var parts=val.split(/[.\/-]+/);var day=parseInt(parts[1],10);var month=parseInt(parts[0],10);var year=parseInt(parts[2],10);if(year==0||month==0||month>12){return false}var monthLength=[31,28,31,30,31,30,31,31,30,31,30,31];if(year%400==0||year%100!=0&&year%4==0){monthLength[1]=29}return day>0&&day<=monthLength[month-1]},awsaccountid:function(val,elem,self){var regExp=/^[a-zA-Z0-9](?:\-?[a-zA-Z0-9]){0,11}$/;return""!==val?regExp.test(val):false}},messages:{luhn:"This value should pass the luhn test.",americandate:"This value should be a valid date (MM/DD/YYYY).",awsaccountid:"This value should be a valid account ID"}})})(window.jQuery||window.Zepto);/*3c7fe634e78718c7bdbb0d65ae967daa*/window.ParsleyConfig=window.ParsleyConfig||{};(function($){var dict={};dict.ar_SA={messages:{defaultMessage:"تنسيق الحقل غير صحيح",type:{email:"اكتب البريد الإلكتروني بالطريقة المطلوبة",url:"اكتب الرابط بالطريقة المطلوبة",urlstrict:"اكتب الرابط بالطريقة المطلوبة",number:"اكتب أرقام ففط (عدد صحيح)",digits:"اكتب أرقاما فقط",dateIso:"اكتب التاريخ بهذه الصيغة (YYYY-MM-DD).",alphanum:"اكتب حروف وأرقام فقط",phone:"اكتب رقم هاتف بالطريقة المطلوبة"},notnull:"هذا الحقل مطلوب",notblank:"هذا الحقل مطلوب",required:"هذا الحقل مطلوب",regexp:"تنسيق الحقل غير صحيح",min:"الرقم يجب أن يكون أكبر من أو يساوي : %s.",max:"الرقم يجب أن يكون أصغر من أو يساوي : %s.",range:"الرقم يجب أن يكون بين %s و %s.",minlength:"الحقل قصير. يجب أن يحتوي على %s حرف/أحرف أو أكثر",maxlength:"الحقل طويل. يجب أن يحتوي على %s حرف/أحرف أو أقل",rangelength:"طول الحقل غير مقبول. يجب أن يكون بين %s و %s حرف/أحرف",mincheck:"يجب أن تختار %s (اختيار) على الأقل",maxcheck:"يجب أن تختار %s (اختبار) أو أقل",rangecheck:"يجب أن تختار بين %s و %s (اختبار).",equalto:"يجب أن يتساوى الحقلان",americandate:"اكتب التاريخ بالطريقة المطلوبة (MM/DD/YYYY).",awsaccountid:"يجب أن تكون هذه القيمة معرف حساب صالحًا."}};dict.de_DE={messages:{defaultMessage:"Die Eingabe scheint nicht korrekt zu sein.",type:{email:"Die Eingabe muss eine gültige E-Mail-Adresse sein.",url:"Die Eingabe muss eine gültige URL sein.",urlstrict:"Die Eingabe muss eine gültige URL sein.",number:"Die Eingabe muss eine Zahl sein.",digits:"Die Eingabe darf nur Ziffern enthalten.",dateIso:"Die Eingabe muss ein gültiges Datum im Format YYYY-MM-DD sein.",alphanum:"Die Eingabe muss alphanumerisch sein.",phone:"Die Eingabe muss eine gültige Telefonnummer sein."},notnull:"Die Eingabe darf nicht leer sein.",notblank:"Die Eingabe darf nicht leer sein.",required:"Dies ist ein Pflichtfeld.",regexp:"Die Eingabe scheint ungültig zu sein.",min:"Die Eingabe muss größer oder gleich %s sein.",max:"Die Eingabe muss kleiner oder gleich %s sein.",range:"Die Eingabe muss zwischen %s und %s liegen.",minlength:"Die Eingabe ist zu kurz. Es müssen mindestens %s Zeichen eingegeben werden.",maxlength:"Die Eingabe ist zu lang. Es dürfen höchstens %s Zeichen eingegeben werden.",rangelength:"Die Länge der Eingabe ist ungültig. Es müssen zwischen %s und %s Zeichen eingegeben werden.",equalto:"Dieses Feld muss dem anderen entsprechen.",awsaccountid:"Dieser Wert sollte eine gültige Konto-ID sein."}};dict.es_ES={messages:{defaultMessage:"Este valor parece ser inválido.",type:{email:"Este valor debe ser un correo válido.",url:"Este valor debe ser una URL válida.",urlstrict:"Este valor debe ser una URL válida.",number:"Este valor debe ser un número válido.",digits:"Este valor debe ser un dígito válido.",dateIso:"Este valor debe ser una fecha válida (YYYY-MM-DD).",alphanum:"Este valor debe ser alfanumérico.",phone:"Este valor debe ser un número telefónico válido."},notnull:"Este valor no debe ser nulo.",notblank:"Este valor no debe estar en blanco.",required:"Este valor es requerido.",regexp:"Este valor es incorrecto.",min:"Este valor no debe ser menor que %s.",max:"Este valor no debe ser mayor que %s.",range:"Este valor debe estar entre %s y %s.",minlength:"Este valor es muy corto. La longitud mínima es de %s caracteres.",maxlength:"Este valor es muy largo. La longitud máxima es de %s caracteres.",rangelength:"La longitud de este valor debe estar entre %s y %s caracteres.",mincheck:"Debe seleccionar al menos %s opciones.",maxcheck:"Debe seleccionar %s opciones o menos.",rangecheck:"Debe seleccionar entre %s y %s opciones.",equalto:"Este valor debe ser idéntico.",americandate:"Este valor debe ser una fecha válida (MM/DD/YYYY).",awsaccountid:"Este valor debe tener un ID de cuenta válido."}};dict.fr_FR={messages:{defaultMessage:"Cette valeur semble non valide.",type:{email:"Cette valeur n'est pas une adresse email valide.",url:"Cette valeur n'est pas une URL valide.",urlstrict:"Cette valeur n'est pas une URL valide.",number:"Cette valeur doit être un nombre.",digits:"Cette valeur doit être numérique.",dateIso:"Cette valeur n'est pas une date valide (YYYY-MM-DD).",alphanum:"Cette valeur doit être alphanumérique."},notnull:"Cette valeur ne peut pas être nulle.",notblank:"Cette valeur ne peut pas être vide.",required:"Ce champ est requis.",regexp:"Cette valeur semble non valide.",min:"Cette valeur ne doit pas être inféreure à %s.",max:"Cette valeur ne doit pas excéder %s.",range:"Cette valeur doit être comprise entre %s et %s.",minlength:"Cette chaîne est trop courte. Elle doit avoir au minimum %s caractères.",maxlength:"Cette chaîne est trop longue. Elle doit avoir au maximum %s caractères.",rangelength:"Cette valeur doit contenir entre %s et %s caractères.",equalto:"Cette valeur devrait être identique.",mincheck:"Vous devez sélectionner au moins %s choix.",maxcheck:"Vous devez sélectionner %s choix maximum.",rangecheck:"Vous devez sélectionner entre %s et %s choix.",luhn:"Cette valeur doit passer l'algorithme de Luhn.",americandate:"Cette valeur doit être une date valide (MM/DD/YYYY).",awsaccountid:"Cette valeur doit être un ID de compte valide."}};dict.id_ID={messages:{defaultMessage:"Nilai ini tidak valid.",type:{email:"Nilai ini harus berupa email yang valid.",url:"Nilai ini harus berupa url yang valid.",urlstrict:"Nilai ini harus berupa url yang valid.",number:"Nilai ini harus berupa angka yang valid.",digits:"Nilai ini harus berupa digit.",dateIso:"Nilai ini harus berupa tanggal yang valid (YYYY-MM-DD).",alphanum:"Nilai ini harus berupa alfanumerik."},notnull:"Nilai ini tidak boleh null.",notblank:"Nilai ini tidak boleh kosong.",required:"Nilai ini wajib diisi.",regexp:"Nilai ini tidak valid.",min:"Nilai ini harus lebih besar daripada %s.",max:"Nilai ini harus lebih kecil daripada %s.",range:"Nilai ini harus diantara %s sampai dengan %s.",minlength:"Nilai ini terlalu pendek. Harus memiliki %s karakter atau lebih.",maxlength:"Nilai ini terlalu panjang. Harus memiliki %s karakter atau kurang.",rangelength:"Panjang nilai ini tidak valid. Harus memiliki panjang di antara %s sampai dengan %s karakter.",equalto:"Nilai ini harus sama.",mincheck:"Anda harus memilih minimal %s pilihan.",maxcheck:"Anda harus memilih %s pilihan atau kurang.",rangecheck:"Anda harus memilih diantara %s sampai %s pilihan.",awsaccountid:"Nilai ini harus merupakan ID akun valid."}};dict.it_IT={messages:{defaultMessage:"Questo valore sembra essere non valido.",type:{email:"Questo valore deve essere un indirizzo email valido.",url:"Questo valore deve essere un URL valido.",urlstrict:"Questo valore deve essere un URL valido.",number:"Questo valore deve essere un numero valido.",digits:"Questo valore deve essere di tipo numerico.",dateIso:"Questo valore deve essere una data valida (YYYY-MM-DD).",alphanum:"Questo valore deve essere di tipo alfanumerico."},notnull:"Questo valore non deve essere nullo.",notblank:"Questo valore non deve essere vuoto.",required:"Questo valore è richiesto.",regexp:"Questo valore non è corretto.",min:"Questo valore deve essere maggiore di %s.",max:"Questo valore deve essere minore di %s.",range:"Questo valore deve essere compreso tra %s e %s.",minlength:"Questo valore è troppo corto. La lunghezza minima è di %s caratteri.",maxlength:"Questo valore è troppo lungo. La lunghezza massima è di %s caratteri.",rangelength:"La lunghezza di questo valore deve essere compresa fra %s e %s caratteri.",equalto:"Questo valore deve essere identico.",luhn:"Questo valore deve superare il test di Luhn.",awsaccountid:"Questo valore deve essere un ID account valido."}};dict.ja_JP={messages:{defaultMessage:"正しい値を入力してください。",type:{email:"正しいメールアドレスを入力してください。",url:"正しい URL を入力してください。",urlstrict:"完全な URL を入力してください。",number:"正しい数値を入力してください。",digits:"整数を入力してください。",dateIso:"正しい形式 (YYYY-MM-DD) の日付を入力してください。",alphanum:"半角英数字で入力してください。",phone:"正しい電話番号を入力してください。"},notnull:"値を入力してください。",notblank:"空白以外の値を入力してください。",required:"このフィールドを入力してください。",regexp:"正しい値を入力してください。",min:"%s 以上の数値を入力してください。",max:"%s 以下の数値を入力してください。",range:"%s 以上 %s 以下の数値を入力してください。",minlength:"値が短すぎます。%s 文字以上で入力してください。",maxlength:"値が長すぎます。%s 文字以下で入力してください。",rangelength:"値の長さが正しくありません。%s 文字以上 %s 文字以下で入力してください。",mincheck:"%s 個以上を選択してください。",maxcheck:"%s 個以下を選択してください。",rangecheck:"%s 個以上 %s 個以下を選択してください。",equalto:"同じ値を入力してください。",awsaccountid:"この値は、有効なアカウント ID とする必要があります。"}};dict.ko_KR={messages:{defaultMessage:"입력하신 값이 올바르지 않습니다.",type:{email:"입력하신 이메일이 형식에 맞지 않습니다.",url:"정확한 URL을 입력해주시기 바랍니다.",urlstrict:"정확한 URL을 입력해주시기 바랍니다.",number:"숫자만 입력하시기 바랍니다.",digits:"숫자만 입력하시기 바랍니다.",dateIso:"정확한 날짜를 입력하시기 바랍니다.(YYYY-MM-DD)",alphanum:"영문자만 입력하시기 바랍니다.",phone:"정확한 핸드폰 번호를 입력하시기 바랍니다."},notnull:"Null값은 입력하실 수 없습니다.",notblank:"값이 비어있을 수는 없습니다.",required:"필수로 입력해야 합니다.",regexp:"입력하신 값이 올바르지 않은 것 같습니다.",min:"입력하신 숫자는 %s보다 많아야합니다.",max:"입력하신 숫자는 %s보다 적어야 합니다.",range:"입력하신 숫자는 %s-%s 사이여야 합니다.",minlength:"입력하신 값이 너무 짧습니다. %s자 이상 입력하시기 바랍니다.",maxlength:"입력하신 값이 너무 깁니다. %s자 이하로 입력하시기 바랍니다.",rangelength:"입력하신 값은 %s-%s자 사이여야 합니다.",mincheck:"적어도 %s개를 선택하셔야 합니다.",maxcheck:"%s보다 적게 선택하셔야 합니다.",rangecheck:"%s-%s사이로 선택하셔야합니다.",equalto:"입력하신 값이 동일하지 않습니다.",americandate:"정확한 날짜를 입력하시기 바랍니다. (MM/DD/YYYY).",awsaccountid:"이 값은 유효한 계정 ID여야 합니다."}};dict.pt_BR={messages:{defaultMessage:"Este valor parece estar inválido.",type:{email:"Este valor deve ser um e-mail válido.",url:"Este valor deve ser uma URL válida.",urlstrict:"Este valor deve ser uma URL válida.",number:"Este valor deve ser um número válido.",digits:"Este valor deve ser um dígito válido.",dateIso:"Este valor deve ser uma data válida (YYYY-MM-DD).",alphanum:"Este valor deve ser alfanumérico.",phone:"Este valor deve ser um número telefone válido."},notnull:"Este valor não deve ser nulo.",notblank:"Este valor não deve ser branco.",required:"Este valor é obrigatório.",regexp:"Este valor parece estar inválido.",min:"Este valor deve ser maior ou igual a %s.",max:"Este valor deve ser menor ou igual a %s.",range:"Este valor deve estar entre %s e %s.",minlength:"Este valor é muito pequeno. Ele deve ter %s caracteres ou mais.",maxlength:"Este valor é muito grande. Ele deve ter %s caracteres ou menos.",rangelength:"O tamanho deste valor é inválido. Ele deve possuir entre %s e %s caracteres.",mincheck:"Você deve selecionar pelo menos %s opções.",maxcheck:"Você deve selecionar %s opções ou menos.",rangecheck:"Você deve selecionar entre %s e %s opções.",equalto:"Este valor deve ser o mesmo.",awsaccountid:"Esse valor deve ser um ID de conta válido."}};dict.ru_RU={messages:{defaultMessage:"Поле заполнено некорректно.",type:{email:"Поле должно быть адресом электронной почты.",url:"Поле должно быть ссылкой на сайт.",urlstrict:"Поле должно быть ссылкой на сайт.",number:"Поле должно быть числом.",digits:"Поле должно содержать только цифры.",dateIso:"Поле должно быть датой в формате (ГГГГ-ММ-ДД).",alphanum:"Поле должно содержать только цифры и буквы.",phone:"Поле должно содержать корректный номер телефона."},notnull:"Поле должно быть не нулевым.",notblank:"Поле не должно быть пустым.",required:"Поле обязательно для заполнения.",regexp:"Поле заполнено некорректно.",min:"Значение поля должно быть больше %s.",max:"Значение поля должно быть меньше %s.",range:"Значение поля должно быть между %s и %s.",minlength:"В поле должно быть минимум %s символов(а).",maxlength:"В поле должно быть не больше %s символов(а).",rangelength:"В поле должно быть от %s до %s символов(а).",mincheck:"Необходимо выбрать не менее %s пунктов(а).",maxcheck:"Необходимо выбрать не более %s пунктов(а).",rangecheck:"Необходимо выбрать от %s до %s пунктов.",equalto:"Значения полей должны быть одинаковыми.",americandate:"В поле должна быть корректная дата в формате MM/DD/YYYY.",awsaccountid:"Это значение должно быть действительным ID аккаунта."}};dict.th_TH={messages:{defaultMessage:"ค่านี้ดูเหมือนว่าจะไม่ถูกต้อง",type:{email:"ค่านี้ควรจะเป็นอีเมลที่ถูกต้อง",url:"ค่านี้ควรจะเป็น url ที่ถูกต้อง",urlstrict:"ค่านี้ควรจะเป็น url ที่ถูกต้อง",number:"ค่านี้ควรจะเป็นตัวเลขที่ถูกต้อง",digits:"ค่านี้ควรจะเป็นเลขโดด",dateIso:"ค่านี้ควรจะเป็นวันที่ที่ถูกต้อง (YYYY-MM-DD)",alphanum:"ค่านี้ควรจะเป็นตัวอักษรเลข",phone:"ค่านี้ควรจะเป็นหมายเลขโทรศัพท์ที่ถูกต้อง"},notnull:"ค่านี้ไม่ควรจะไม่มีค่า",notblank:"ค่านี้ไม่ควรจะว่าง",required:"ค่านี้จำเป็น",regexp:"ค่านี้ดูเหมือนว่าจะไม่ถูกต้อง",min:"ค่านี้ควรจะมากกว่าหรือเท่ากับ %s",max:"ค่านี้ควรจะน้อยกว่าหรือเท่ากับ %s",range:"ค่านี้ควรอยู่ระหว่าง %s และ %s",minlength:"ค่านี้สั้นเกินไป, ควรมี %s อักขระหรือมากกว่า",maxlength:"ค่านี้ยาวเกินไป, ควรมี %s อักขระหรือน้อยกว่า",rangelength:"ความยาวของค่านี้ไม่ถูกต้อง, ควรมีความยาวอักขระระหว่าง %s และ %s",mincheck:"คุณจะต้องเลือกอย่างน้อย %s ตัวเลือก",maxcheck:"คุณจะต้องเลือก %s ตัวเลือกหรือน้อยกว่า",rangecheck:"คุณจะต้องเลือกระหว่าง %s และ %s ตัวเลือก",equalto:"ค่านี้ควรจะมีค่าเหมือนกัน",americandate:"ค่านี้ควรเป็นวันที่ที่ถูกต้อง (MM/DD/YYYY)",awsaccountid:"ค่านี้ควรเป็นรหัสบัญชีที่ถูกต้อง"}};dict.tr_TR={messages:{defaultMessage:"Bu değer geçersiz görünüyor.",type:{email:"Geçerli bir e-posta adresi girmelisiniz.",url:"Geçerli bir URL girmelisiniz.",urlstrict:"Geçerli bir URL girmelisiniz.",number:"Bu bölüme geçerli bir numara girmelisiniz.",digits:"Bu bölüm basamaklardan oluşmalıdır.",dateIso:"Bu alan geçerli bir tarih olmalıdır (YYYY-MM-DD).",alphanum:"Bu alan alfa sayısal karakterlerden oluşmalıdır.",phone:"Bu alan geçerli bir telefon numarası olmalıdır."},notnull:"Bu alan boş olmamalıdır.",notblank:"Bu alanı boş bırakamazsınız.",required:"Bu alan gereklidir.",regexp:"Değer geçersiz görünüyor  .",min:"Bu alan %s değerine eşit ya da küçük olmalıdır.",max:"Bu alan %s değerine eşit ya da büyük olmalıdır.",range:"Bu alanın değeri %s ile %s arasında olmalıdır.",minlength:"Bu alan çok kısa. %s karaktere eşit ya da fazla olmalıdır.",maxlength:"Bu alan çok uzun. %s karaktere eşit ya da küçük olmalıdır.",rangelength:"Bu alanın uzunluğu %s ile %s arasında olmalıdır.",mincheck:"En az %s seçenek seçmelisiniz.",maxcheck:"En fazla %s seçenek seçebilirsiniz.",rangecheck:"En az %s en fazla %s seçenek seçebilirsiniz.",equalto:"Bu değer eşit olmalıdır.",americandate:"Bu alan geçerli bir tarih olmalıdır (MM/DD/YYYY).",awsaccountid:"Bu değer geçerli bir hesap kimliği olmalıdır."}};dict.vi_VN={messages:{defaultMessage:"Thông tin này không hợp lệ.",type:{email:"Email không hợp lệ.",url:"Url không hợp lệ.",urlstrict:"Yêu cầu nhập địa chỉ url.",number:"Yêu cầu nhập giá trị kiểu số.",digits:"Yêu cầu nhập vào các chữ số.",dateIso:"Yêu cầu nhập ngày tháng theo chuẩn sau (YYYY-MM-DD).",alphanum:"Yêu cầu nhập chữ cái hoặc chữ số."},notnull:"Thông tin này chưa nhập.",notblank:"Thông tin này không được để trống.",required:"Thông tin này là bắt buộc.",regexp:"Thông tin này không hợp lệ.",min:"Giá trị này phải lớn hơn %s.",max:"Giá trị này phải nhỏ hơn %s.",range:"Giá trị này phải nằm trong khoảng từ %s đến %s.",minlength:"Chuỗi nhập vào quá ngắn. Yêu cầu tối thiểu %s ký tự.",maxlength:"Chuỗi nhập vào quá dài. Yêu cầu tối đa %s ký tự.",rangelength:"Chuỗi nhập vào không hợp lệ. Yêu cầu độ dài trong khoảng từ %s đến %s ký tự.",mincheck:"Không được chọn ít hơn %s lựa chọn.",maxcheck:"Không được chọn nhiều hơn %s lựa chọn.",rangecheck:"Phải chọn trong khoảng từ %s đến %s lựa chọn.",equalto:"Giá trị phải trùng khớp.",awsaccountid:"Giá trị này cần phải là một ID tài khoản hợp lệ."}};dict.zh_CN={messages:{defaultMessage:"不正确的值",type:{email:"字段值应该是一个正确的电子邮件地址",url:"字段值应该是一个正确的URL地址",urlstrict:"字段值应该是一个正确的URL地址",number:"字段值应该是一个合法的数字",digits:"字段值应该是一个单独的数字",dateIso:"字段值应该是一个正确的日期描述(YYYY-MM-DD).",alphanum:"字段值应该是只包含字母和数字"},notnull:"字段值不可为null",notblank:"字段值不可为空",required:"字段值是必填的",regexp:"字段值不合法",min:"字段值应该大于 %s",max:"字段值应该小于 %s.",range:"字段值应该大于 %s 并小于 %s.",minlength:"字段值太短了，长度应该大于等于 %s 个字符",maxlength:"字段值太长了，长度应该小于等于 %s 个字符",rangelength:"字段值长度错了，长度应该在 %s 和 %s 个字符之间",mincheck:"你至少要选择 %s 个选项",maxcheck:"你最多只能选择 %s 个选项",rangecheck:"你只能选择 %s 到 %s 个选项",equalto:"字段值应该和给定的值一样",awsaccountid:"此值应该是有效的账户 ID。"}};dict.zh_TW={messages:{defaultMessage:"欄位不正確",type:{email:"欄位不是正確的 Email ",url:"欄位不是正確的 URL ",urlstrict:"欄位不是正確的 URL ",number:"欄位不是合法的數字",digits:"欄位不是單獨的数字",dateIso:"欄位不是正確的日期格式(YYYY-MM-DD).",alphanum:"欄位只能包含英文字母和數字"},notnull:"欄位不可為 null",notblank:"欄位不可留空",required:"此為必填欄位",regexp:"欄位不合法",min:"欄位應該大於 %s",max:"欄位應該小於 %s.",range:"欄位應該大於 %s 並小於 %s.",minlength:"欄位過短，長度應該大於等於 %s",maxlength:"欄位過長，長度應該小於等於 %s",rangelength:"欄位長度錯誤，應該在 %s 和 %s 之間",mincheck:"至少要選擇 %s 個選項",maxcheck:"最多只能選擇 %s 個選項",rangecheck:"你只能選擇 %s 到 %s 個選項",equalto:"欄位的值不一致",awsaccountid:"此值應該是有效的帳戶 ID。"}};window.ParsleyConfig.setLocale=function(locale){var d=dict[locale];if(d){window.ParsleyConfig=$.extend(window.ParsleyConfig,d)}return!!d}})(window.jQuery);/*39c8ddb05671a75ab49e413bff6607a5*/$.fn.validator=function(options){"use strict";var form=this,settings=$.extend({errorHeader:"Oops! The following fields contain errors:"},options),errorFields=[],errorBox={addItem:function(id,text){var itemIndex=$.inArray(text,errorFields);var errorId="error-"+id+"-"+form.attr("id");var added=this.errorList.children("li#"+errorId).length>0;if(itemIndex>-1&&!added){this.errorList.children("li").each(function(){if($.inArray($(this).text(),errorFields)>itemIndex){$('<li id="'+errorId+'">'+text+"</li>").insertBefore($(this));added=true}})}if(!added){this.errorList.append('<li id="'+errorId+'">'+text+"</li>")}},errorList:"",header:settings.errorHeader,init:function(){if(form.find($(".error-summary")).length===0){form.prepend(this.wrapper);this.wrapper.find("h3").text(this.header);this.errorList=this.wrapper.find(".error-summary-list");this.show()}},remove:function(){this.wrapper.fadeOut(400).delay(400).remove()},show:function(){this.wrapper.fadeIn(400)},wrapper:$('<div class="error-summary alert alert-block alert-error"><h3></h3><ul class="error-summary-list"></ul></div>')},getCampaignId=function(){var obfuscated_campId,key,x;var campIdKey=[];var realCampaignId="";var $obfuscatedCampIdSelector=form.find("[data-key-1]");var $keySelector=form.find("[data-key-2]");
// Before we submit the form, we need to unscramble the form's campaign ID (the obfuscated value found in the JSP).  The goal here is
//  real campaign ID back into the form and then submit.
obfuscated_campId=$obfuscatedCampIdSelector.val();key=$keySelector.val();campIdKey.push(obfuscated_campId.slice(0,3));campIdKey.push(obfuscated_campId.slice(3,6));campIdKey.push(obfuscated_campId.slice(6,9));campIdKey.push(obfuscated_campId.slice(9,12));campIdKey.push(obfuscated_campId.slice(12,15));for(x=0;x<5;x++){if(key[x]==="0"){realCampaignId=campIdKey[x];break}}for(x=0;x<5;x++){if(key[x]==="1"){realCampaignId=realCampaignId+campIdKey[x];break}}for(x=0;x<5;x++){if(key[x]==="2"){realCampaignId=realCampaignId+campIdKey[x];break}}for(x=0;x<5;x++){if(key[x]==="3"){realCampaignId=realCampaignId+campIdKey[x];break}}for(x=0;x<5;x++){if(key[x]==="4"){realCampaignId=realCampaignId+campIdKey[x];break}}
// Congratulations, you now have re-assembled the actual Campaign ID to be used when submitting the form.  We'll take this value
$obfuscatedCampIdSelector.val(realCampaignId);
// Add a function to the submitCallbacks to remove the input containing the Campaign ID altogether.
submitCallbacks.push(function(){$obfuscatedCampIdSelector.remove()})},setFormAction=function(){var formAction=form.find("input[name=aws_act_id]").val();if(formAction.length>0){form.attr("action",atob(formAction))}},hasAwsUserInfoVal=function(){var awsUserInfoField=form.find(".aws-form-user-info input");if(awsUserInfoField.length>0){return awsUserInfoField.val().length!==0}return false},initFormTracking=function(){var cookieName="aws_campaign_trk",cookie=$.cookie(cookieName)||"{}",cookieObj=JSON.parse(cookie),cookieDuration=30,campaignName=form.data("trk-campaign");if(cookieObj[campaignName]){var val=escapeHtml(decodeURIComponent(cookieObj[campaignName]));form.append('<input type="hidden" id="Website_Referral_Code__c" name="Website_Referral_Code__c" value="'+val+'">');form.append('<input type="hidden" id="00N500000026nJd" name="00N500000026nJd" value="'+val+'">')}
// add a callback to the submit queue that writes a cookie without the tracking info from the current form
submitCallbacks.push(function(){delete cookieObj[campaignName];$.cookie(cookieName,JSON.stringify(cookieObj),{path:"/",expires:cookieDuration})})},populateCustomerData=function(){var customerDataFieldNames={awsAccountId:"aws-account-id",isIAMUser:"is-iam-user",siteCatalystFallbackId:"sc-visitor-id",targetVisitorId:"target-visitor-id",urchinId:"urchin-id",munchkinId:"munchkin-id"};for(var key in customerDataFieldNames){$('input[type="hidden"][data-name="'+customerDataFieldNames[key]+'"]').attr("value",AWS.CurrentUser[key])}},
// an array of callbacks to be executed after the form is submitted
submitCallbacks=[];var locale=typeof AWS==="object"&&AWS.PageSettings?AWS.PageSettings.currentLanguage:"en-US";if(locale&&window.ParsleyConfig&&typeof window.ParsleyConfig.setLocale==="function"){locale=locale.replace("-","_");window.ParsleyConfig.setLocale(locale)}form.parsley({errors:{classHandler:function($elem){var ret;var parsleyAttr=$elem.data("parsley-class-handler");if(typeof parsleyAttr!=="undefined"){ret=$(parsleyAttr)}else{ret=$elem.parents(".field-err-wrapper").first()}return ret},container:function($elem){var ret;var parsleyAttr=$elem.data("parsley-errors-container");if(typeof parsleyAttr!=="undefined"){ret=$(parsleyAttr)}else{ret=undefined}return ret}},listeners:{onFieldError:function(elem){var tagName=elem.prop("tagName").toLowerCase(),fieldId=elem.attr("id"),$fieldErrorWrapper=elem.parents(".field-err-wrapper").first(),$errorList=$fieldErrorWrapper.find(".parsley-error-list"),$lastInput=$fieldErrorWrapper.find('input[type="text"]').last(),elemType=elem.attr("type"),errorLabel;if(fieldId){if(form.find($(".error-summary")).length===0){if(form.data("hide-error-summary")!==true){errorBox.init()}}errorLabel=form.find($('label[for="'+fieldId+'"]')).text();errorLabel=errorLabel.replace("*","");if(errorLabel.length>0){if(form.data("hide-error-summary")!==true){errorBox.addItem(fieldId,errorLabel)}}if(elem.hasClass("autocomplete")&&tagName==="select"){setTimeout(function(){$fieldErrorWrapper.find(".parsley-error-list").insertAfter($lastInput)},50)}if(elemType==="checkbox"||elemType==="radio"){if($errorList.length>0){$errorList.appendTo($fieldErrorWrapper)}}}},onFieldSuccess:function(elem){var fieldId=elem.attr("id"),elemVal=elem.val(),whitelist;$("#error-"+fieldId+"-"+form.attr("id")).remove();if(form.find($(".error-summary-list")).children("li").length===0){if(form.data("hide-error-summary")!==true){errorBox.remove()}}if(elem.data("inlist")){whitelist=elem.data("whitelist");$.each(whitelist,function(key,value){if(elemVal.trim()===value.trim()){form.find($('input[name="Campaign_ID"]')).val(key)}})}},onFieldValidate:function(elem){if(elem.hasClass("state-select")&&!form.data("submittedOnce")){return true}},onFormSubmit:function(isFormValid){if(!isFormValid){if(form.data("hide-error-summary")!==true){errorBox.init()}}else{if(!hasAwsUserInfoVal()){form.off("submit");if(form.attr("action")===undefined){setFormAction()}if(form.data("trk-campaign")&&AWS.CookieConsent.hasConsent("aws_campaign_trk")){initFormTracking()}var sf=form.find($("[data-key-1]")),wl=form.find($("input[data-whitelist]"));if(sf.length>0&&wl.length===0){getCampaignId()}form.trigger("custom_add-tracking-pixels_on-form-submit");if(form.data("ajax-submit")===true){form.off("submit");var ajaxForm=new AWS.AjaxForm(form);ajaxForm.submit()}else{form.submit()}
// execute the callbacks in the submitCallbacks
for(var i=0;i<submitCallbacks.length;i++){submitCallbacks[i]()}
// Spam user filled in form so submit to the alternative URL
}else{form.off("submit");form.attr("action",form.data("altUrl"));var formToSubmit=form.data("ajax-submit")===true?new AWS.AjaxForm(form):form;formToSubmit.submit()}}}}});function populateErrorFields(){form.find(".parsley-validated").each(function(i){var fieldId=$(this).attr("id");if(fieldId){var errorLabel=form.find($('label[for="'+fieldId+'"]')).text();errorLabel=errorLabel.replace("*","");errorFields[i]=errorLabel}})}function bindFormSubmitButtonHandler(){form.find('button[type="submit"]').on("click",function(e){e.preventDefault();form.data("submittedOnce",true);form.parsley("validate")})}function escapeHtml(str){var div=document.createElement("div");div.appendChild(document.createTextNode(str));return div.innerHTML}$(function(){populateErrorFields();bindFormSubmitButtonHandler();populateCustomerData()})};/*9fbb3a3909efe1766806aa16889ab95f*/(function(){"use strict";var DuplicateHiddenField=function(){this.bindChangeEvent()};DuplicateHiddenField.prototype={bindChangeEvent:function(){var elems=Array.prototype.slice.call(document.querySelectorAll("form [data-duplicate-field]"));elems.forEach(function(ele){$(ele).on("change",this.valueChanged)}.bind(this))},valueChanged:function(e){var $elem=$(e.currentTarget);var $form=$elem.closest("form");var elemName=e.currentTarget.dataset.duplicateField;var $existingElem=$form.find("[name="+elemName+"]");if($existingElem.length>0){$existingElem.val($elem.val())}else{$form.append("<input type='hidden' name='"+elemName+"' value='"+$elem.val()+"'/>")}}};$(function(){new DuplicateHiddenField})})();